#include "Enemy.h"
#include "TextureManager.h"
#include "Collision.h"

int arr_copy[MAP_TILE_HEIGHT][MAP_TILE_WIDTH] =
{
{3,0,0,0,4,5,0,0,4,5,0,0,8,0,0,8,0,0,0,0,0,0,4,5,0,0,0,0,0,0},
{3,3,3,0,12,13,0,0,12,13,0,0,16,0,0,16,0,0,11,0,0,0,12,13,0,0,0,0,0,3},
{0,0,3,0,0,0,8,2,0,0,4,5,1,8,0,0,3,3,3,0,8,0,2,0,11,0,0,3,3,3},
{0,9,0,3,0,7,16,0,1,0,12,13,0,16,11,2,3,3,3,0,16,11,0,0,0,0,3,3,0,0},
{0,0,0,3,3,3,0,0,8,0,0,8,0,0,0,3,3,3,3,0,0,0,0,0,0,3,3,0,0,0},
{0,4,5,0,0,3,3,0,16,0,0,16,0,0,11,3,3,3,3,3,0,0,8,0,7,3,0,0,0,0},
{0,12,13,0,8,0,3,3,0,11,2,0,8,0,0,3,3,3,3,3,0,0,16,0,3,3,0,4,5,0},
{0,2,2,0,16,0,0,3,3,0,1,0,16,0,7,3,3,3,3,3,0,0,0,3,3,0,0,12,13,0},
{0,0,0,1,0,0,9,0,3,3,0,11,0,0,3,3,3,3,3,3,0,3,3,3,0,0,0,0,0,0},
{0,0,0,0,8,2,0,8,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,11,2,0,0,0},
{0,0,4,5,16,0,0,16,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,9,8,0,1,0,0,0},
{0,0,12,13,0,0,0,1,9,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,16,0,0,0,0,0},
{0,0,0,0,0,0,0,8,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,4,5,0},
{0,0,0,2,0,8,0,16,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,11,0,0,12,13,0},
{0,1,8,0,0,16,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0},
{0,0,16,4,5,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,0,0,0,0},
{0,0,0,12,13,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,16,1,2,0,0},
{0,0,0,0,0,0,8,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,0,0,0,0,0,0},
{0,0,4,5,0,0,16,0,9,0,3,3,3,3,3,3,3,3,3,3,0,0,0,16,0,0,4,5,0,0},
{0,0,12,13,0,1,2,0,0,8,0,0,3,3,3,0,0,0,0,8,0,9,0,0,0,0,12,13,0,0},
{0,0,0,0,0,0,0,0,0,16,0,0,8,1,0,0,8,0,0,16,0,0,0,0,1,0,0,0,0,0},
{0,1,0,0,8,0,0,0,0,0,0,0,16,1,0,0,16,0,0,8,0,0,0,0,0,8,0,0,1,0},
{0,0,0,0,16,0,0,4,5,0,0,0,0,0,0,0,0,0,1,16,0,0,0,4,5,16,0,0,0,0},
{0,0,0,0,0,0,0,12,13,0,0,0,8,0,0,4,5,0,0,0,0,0,0,12,13,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

Enemy::Enemy(const char* textureSheet, int x, int y, int speed, int health) : GameObject(textureSheet, x, y), speed(speed), health(health) {}

Enemy::~Enemy() {}



void Enemy::Render()
{
    GameObject::Render();
}

void Enemy::takeDamage(int damage)
{
    health -= damage;
}

bool Enemy::isDead()
{
    return health <= 0;
}

